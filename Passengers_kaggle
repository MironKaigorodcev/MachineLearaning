{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":5555,"status":"ok","timestamp":1734506354616,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"1UFXa6ROCiRW"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":22905,"status":"ok","timestamp":1734506377517,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"P8xk7_COCuhA","outputId":"67e13356-d67f-44c3-820e-8ed71212b979"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":3,"metadata":{"executionInfo":{"elapsed":2754,"status":"ok","timestamp":1734506380266,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"7-R6zc_BDDCI"},"outputs":[],"source":["df = pd.read_csv('/content/drive/MyDrive/passengers/2024/train1.csv')\n","test = pd.read_csv('/content/drive/MyDrive/passengers/2024/test1.csv')"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1734506380267,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"eQjv8J60DGbk"},"outputs":[],"source":["a = test['ID']"]},{"cell_type":"code","execution_count":5,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1734506380267,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"6mH9MZYKDH7B"},"outputs":[],"source":["df = df.drop(['ID'], axis = 1)\n","test = test.drop(['ID'], axis = 1)"]},{"cell_type":"code","execution_count":6,"metadata":{"executionInfo":{"elapsed":551,"status":"ok","timestamp":1734506380813,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"1FIO46n0Ddxv"},"outputs":[],"source":["from sklearn.compose import ColumnTransformer\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.metrics import  mean_absolute_error, f1_score"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":1029,"status":"ok","timestamp":1734506381840,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"wnUGe7eiDqUM"},"outputs":[],"source":["from sklearn.linear_model import LogisticRegression, LogisticRegressionCV\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier,GradientBoostingClassifier,AdaBoostClassifier,ExtraTreesClassifier\n","from xgboost import XGBClassifier\n","from sklearn.model_selection import KFold, cross_val_score"]},{"cell_type":"code","execution_count":8,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1734506381840,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"Jrv4uT-8DKkX"},"outputs":[],"source":["gender_le=LabelEncoder()\n","Customer_Type_le=LabelEncoder()\n","Type_of_Travel=LabelEncoder()\n","Class=LabelEncoder()\n","satisfaction=LabelEncoder()"]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1734506381840,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"LGfCVGwGEDfJ"},"outputs":[],"source":["df['Gender']=gender_le.fit_transform(df['Gender'])\n","df['Customer Type']=Customer_Type_le.fit_transform(df['Customer Type'])\n","df['Type of Travel']=Type_of_Travel.fit_transform(df['Type of Travel'])\n","df['Class']=Class.fit_transform(df['Class'])\n","df['Satisfaction']=satisfaction.fit_transform(df['Satisfaction'])"]},{"cell_type":"code","execution_count":10,"metadata":{"collapsed":true,"executionInfo":{"elapsed":5,"status":"ok","timestamp":1734506381841,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"d0nm9UorFJHp"},"outputs":[],"source":["test['Gender']=gender_le.transform(test['Gender'])\n","test['Customer Type']=Customer_Type_le.transform(test['Customer Type'])\n","test['Type of Travel']=Type_of_Travel.transform(test['Type of Travel'])\n","test['Class']=Class.transform(test['Class'])\n","#test['Satisfaction']=satisfaction.transform(test['Satisfaction'])"]},{"cell_type":"code","execution_count":11,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1734506382075,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"lOz-EfM7Fakp"},"outputs":[],"source":["df = df.drop(['Gate Location', 'Gender', 'Flight Distance', 'Departure Delay', 'Arrival Delay'],axis=1)\n","test = test.drop(['Gate Location', 'Gender', 'Flight Distance', 'Departure Delay', 'Arrival Delay'],axis=1)"]},{"cell_type":"code","execution_count":12,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1734506382075,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"EXb8ZyyIFl4_"},"outputs":[],"source":["X_train = df.drop(['Satisfaction'], axis = 1)\n","y_train = df['Satisfaction']\n","X_test =  test"]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":91655,"status":"ok","timestamp":1734506516480,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"eirnDO8ZoVfH"},"outputs":[],"source":["from imblearn.over_sampling import ADASYN\n","\n","# Создание экземпляра ADASYN\n","adasyn = ADASYN()\n","\n","# Применение ADASYN к данным\n","X_train, y_train = adasyn.fit_resample(X_train, y_train)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":17,"status":"aborted","timestamp":1734506407241,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"VlicL3B9VQXv"},"outputs":[],"source":["from sklearn.svm import SVC\n","model = SVC(kernel = 'rbf')\n","model.fit(X_train, y_train)\n","y_pred = model.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":15,"metadata":{"executionInfo":{"elapsed":17124,"status":"ok","timestamp":1734506764669,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"Isr235g0FvZj"},"outputs":[],"source":["RFC = RandomForestClassifier(n_estimators=100,\n","                              random_state=3,\n","                              max_samples=0.3,\n","                              max_features=0.75,\n","                              max_depth=10, )\n","\n","\n","RFC.fit(X_train,y_train)\n","\n","y_pred = RFC.predict(X_test)"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"executionInfo":{"elapsed":247,"status":"ok","timestamp":1734506769166,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"syRzcCBBDa8N","outputId":"84f2d797-1131-421f-f377-3a5f3520e53b"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eSatisfaction\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e39498\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e5415\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Satisfaction\n","0               39498\n","1                5415\n","Name: count, dtype: int64"]},"execution_count":16,"metadata":{},"output_type":"execute_result"}],"source":["df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","#df_ans.index.name = 'index'\n","df_ans.columns = ['Satisfaction']\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":17,"metadata":{"executionInfo":{"elapsed":235,"status":"ok","timestamp":1734506778081,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"FxdSjbK3Db4n"},"outputs":[],"source":["df_ans.to_csv(\"answer.csv\", index=True)"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"executionInfo":{"elapsed":15848,"status":"ok","timestamp":1734507790682,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"CDV18g3bDy3s","outputId":"5c5eded8-faba-4ba7-f718-a4ad2301ddb5"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eSatisfaction\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e36826\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e8087\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Satisfaction\n","0               36826\n","1                8087\n","Name: count, dtype: int64"]},"execution_count":23,"metadata":{},"output_type":"execute_result"}],"source":["lr = LogisticRegressionCV(cv = 2, max_iter = 1000)\n","lr.fit(X_train , y_train)\n","y_pred = lr.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":16,"status":"aborted","timestamp":1734506407243,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"qdEunUugGr8e"},"outputs":[],"source":["df_ans.to_csv(\"answer1.csv\", index=True)"]},{"cell_type":"code","execution_count":24,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"executionInfo":{"elapsed":121057,"status":"ok","timestamp":1734507918591,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"gvwZwaulG2VC","outputId":"d68e30fb-57da-41fd-f4bf-d917b5e03b05"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eSatisfaction\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e39175\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e5738\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Satisfaction\n","0               39175\n","1                5738\n","Name: count, dtype: int64"]},"execution_count":24,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.neighbors import KNeighborsClassifier\n","knn = KNeighborsClassifier(n_neighbors=9)\n","knn.fit(X_train , y_train)\n","y_pred = knn.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"executionInfo":{"elapsed":14,"status":"aborted","timestamp":1734506407243,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"x_OM1zP4HAjo"},"outputs":[],"source":["df_ans.to_csv(\"answer2.csv\", index=True)"]},{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"executionInfo":{"elapsed":5326,"status":"ok","timestamp":1734507629934,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"VchH0VC8INCN","outputId":"f1fddf33-eab7-4e77-ee32-7fe8ae5d2882"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eSatisfaction\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e39090\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e5823\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Satisfaction\n","0               39090\n","1                5823\n","Name: count, dtype: int64"]},"execution_count":22,"metadata":{},"output_type":"execute_result"}],"source":["XGB = XGBClassifier(n_estimators=500,max_depth=5, )\n","\n","XGB.fit(X_train,y_train)\n","\n","\n","y_pred = XGB.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":13,"status":"aborted","timestamp":1734506407243,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"P4yrg2m6IUSK"},"outputs":[],"source":["df_ans.to_csv(\"passenger.csv\", index=True)"]},{"cell_type":"code","execution_count":20,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"collapsed":true,"executionInfo":{"elapsed":340248,"status":"ok","timestamp":1734507508165,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"smEJYxKgImN8","outputId":"f8a9a119-4072-436b-b335-189cbc4ee060"},"outputs":[{"data":{"text/html":["\u003cstyle\u003e#sk-container-id-2 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-2 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-2 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-2 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-2 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-2 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-2 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-2 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-2 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-2 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-2 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"▸\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-2 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"▾\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-2 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-2 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-2 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-2 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-2 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-2 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `\u003ca\u003e` HTML tag */\n","\n","#sk-container-id-2 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-2 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","\u003c/style\u003e\u003cdiv id=\"sk-container-id-2\" class=\"sk-top-container\"\u003e\u003cdiv class=\"sk-text-repr-fallback\"\u003e\u003cpre\u003eStackingClassifier(estimators=[(\u0026#x27;rf\u0026#x27;,\n","                                RandomForestClassifier(max_depth=15,\n","                                                       max_features=0.75,\n","                                                       max_samples=0.5,\n","                                                       n_estimators=150,\n","                                                       random_state=3)),\n","                               (\u0026#x27;gbdt\u0026#x27;,\n","                                GradientBoostingClassifier(max_features=0.5,\n","                                                           n_estimators=75)),\n","                               (\u0026#x27;xgb\u0026#x27;,\n","                                XGBClassifier(base_score=None, booster=None,\n","                                              callbacks=None,\n","                                              colsample_bylevel=None,\n","                                              colsample_bynode=None,\n","                                              colsample_bytree=None,\n","                                              device=...\n","                                              importance_type=None,\n","                                              interaction_constraints=None,\n","                                              learning_rate=0.3, max_bin=None,\n","                                              max_cat_threshold=None,\n","                                              max_cat_to_onehot=None,\n","                                              max_delta_step=None, max_depth=5,\n","                                              max_leaves=None,\n","                                              min_child_weight=None,\n","                                              missing=nan,\n","                                              monotone_constraints=None,\n","                                              multi_strategy=None,\n","                                              n_estimators=25, n_jobs=None,\n","                                              num_parallel_tree=None,\n","                                              random_state=None, ...))],\n","                   final_estimator=SVC())\u003c/pre\u003e\u003cb\u003eIn a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. \u003cbr /\u003eOn GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.\u003c/b\u003e\u003c/div\u003e\u003cdiv class=\"sk-container\" hidden\u003e\u003cdiv class=\"sk-item sk-dashed-wrapped\"\u003e\u003cdiv class=\"sk-label-container\"\u003e\u003cdiv class=\"sk-label fitted sk-toggleable\"\u003e\u003cinput class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" \u003e\u003clabel for=\"sk-estimator-id-6\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\"\u003e\u0026nbsp;\u0026nbsp;StackingClassifier\u003ca class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.StackingClassifier.html\"\u003e?\u003cspan\u003eDocumentation for StackingClassifier\u003c/span\u003e\u003c/a\u003e\u003cspan class=\"sk-estimator-doc-link fitted\"\u003ei\u003cspan\u003eFitted\u003c/span\u003e\u003c/span\u003e\u003c/label\u003e\u003cdiv class=\"sk-toggleable__content fitted\"\u003e\u003cpre\u003eStackingClassifier(estimators=[(\u0026#x27;rf\u0026#x27;,\n","                                RandomForestClassifier(max_depth=15,\n","                                                       max_features=0.75,\n","                                                       max_samples=0.5,\n","                                                       n_estimators=150,\n","                                                       random_state=3)),\n","                               (\u0026#x27;gbdt\u0026#x27;,\n","                                GradientBoostingClassifier(max_features=0.5,\n","                                                           n_estimators=75)),\n","                               (\u0026#x27;xgb\u0026#x27;,\n","                                XGBClassifier(base_score=None, booster=None,\n","                                              callbacks=None,\n","                                              colsample_bylevel=None,\n","                                              colsample_bynode=None,\n","                                              colsample_bytree=None,\n","                                              device=...\n","                                              importance_type=None,\n","                                              interaction_constraints=None,\n","                                              learning_rate=0.3, max_bin=None,\n","                                              max_cat_threshold=None,\n","                                              max_cat_to_onehot=None,\n","                                              max_delta_step=None, max_depth=5,\n","                                              max_leaves=None,\n","                                              min_child_weight=None,\n","                                              missing=nan,\n","                                              monotone_constraints=None,\n","                                              multi_strategy=None,\n","                                              n_estimators=25, n_jobs=None,\n","                                              num_parallel_tree=None,\n","                                              random_state=None, ...))],\n","                   final_estimator=SVC())\u003c/pre\u003e\u003c/div\u003e \u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-serial\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-parallel\"\u003e\u003cdiv class=\"sk-parallel-item\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-label-container\"\u003e\u003cdiv class=\"sk-label fitted sk-toggleable\"\u003e\u003clabel\u003erf\u003c/label\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-serial\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-estimator fitted sk-toggleable\"\u003e\u003cinput class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" \u003e\u003clabel for=\"sk-estimator-id-7\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\"\u003e\u0026nbsp;RandomForestClassifier\u003ca class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\"\u003e?\u003cspan\u003eDocumentation for RandomForestClassifier\u003c/span\u003e\u003c/a\u003e\u003c/label\u003e\u003cdiv class=\"sk-toggleable__content fitted\"\u003e\u003cpre\u003eRandomForestClassifier(max_depth=15, max_features=0.75, max_samples=0.5,\n","                       n_estimators=150, random_state=3)\u003c/pre\u003e\u003c/div\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-parallel-item\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-label-container\"\u003e\u003cdiv class=\"sk-label fitted sk-toggleable\"\u003e\u003clabel\u003egbdt\u003c/label\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-serial\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-estimator fitted sk-toggleable\"\u003e\u003cinput class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" \u003e\u003clabel for=\"sk-estimator-id-8\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\"\u003e\u0026nbsp;GradientBoostingClassifier\u003ca class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.GradientBoostingClassifier.html\"\u003e?\u003cspan\u003eDocumentation for GradientBoostingClassifier\u003c/span\u003e\u003c/a\u003e\u003c/label\u003e\u003cdiv class=\"sk-toggleable__content fitted\"\u003e\u003cpre\u003eGradientBoostingClassifier(max_features=0.5, n_estimators=75)\u003c/pre\u003e\u003c/div\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-parallel-item\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-label-container\"\u003e\u003cdiv class=\"sk-label fitted sk-toggleable\"\u003e\u003clabel\u003exgb\u003c/label\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-serial\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-estimator fitted sk-toggleable\"\u003e\u003cinput class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-9\" type=\"checkbox\" \u003e\u003clabel for=\"sk-estimator-id-9\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\"\u003eXGBClassifier\u003c/label\u003e\u003cdiv class=\"sk-toggleable__content fitted\"\u003e\u003cpre\u003eXGBClassifier(base_score=None, booster=None, callbacks=None,\n","              colsample_bylevel=None, colsample_bynode=None,\n","              colsample_bytree=None, device=None, early_stopping_rounds=None,\n","              enable_categorical=False, eval_metric=None, feature_types=None,\n","              gamma=None, grow_policy=None, importance_type=None,\n","              interaction_constraints=None, learning_rate=0.3, max_bin=None,\n","              max_cat_threshold=None, max_cat_to_onehot=None,\n","              max_delta_step=None, max_depth=5, max_leaves=None,\n","              min_child_weight=None, missing=nan, monotone_constraints=None,\n","              multi_strategy=None, n_estimators=25, n_jobs=None,\n","              num_parallel_tree=None, random_state=None, ...)\u003c/pre\u003e\u003c/div\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-parallel\"\u003e\u003cdiv class=\"sk-parallel-item\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-label-container\"\u003e\u003cdiv class=\"sk-label fitted sk-toggleable\"\u003e\u003clabel\u003efinal_estimator\u003c/label\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"sk-serial\"\u003e\u003cdiv class=\"sk-item\"\u003e\u003cdiv class=\"sk-estimator fitted sk-toggleable\"\u003e\u003cinput class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-10\" type=\"checkbox\" \u003e\u003clabel for=\"sk-estimator-id-10\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\"\u003e\u0026nbsp;SVC\u003ca class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\"\u003e?\u003cspan\u003eDocumentation for SVC\u003c/span\u003e\u003c/a\u003e\u003c/label\u003e\u003cdiv class=\"sk-toggleable__content fitted\"\u003e\u003cpre\u003eSVC()\u003c/pre\u003e\u003c/div\u003e \u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e"],"text/plain":["StackingClassifier(estimators=[('rf',\n","                                RandomForestClassifier(max_depth=15,\n","                                                       max_features=0.75,\n","                                                       max_samples=0.5,\n","                                                       n_estimators=150,\n","                                                       random_state=3)),\n","                               ('gbdt',\n","                                GradientBoostingClassifier(max_features=0.5,\n","                                                           n_estimators=75)),\n","                               ('xgb',\n","                                XGBClassifier(base_score=None, booster=None,\n","                                              callbacks=None,\n","                                              colsample_bylevel=None,\n","                                              colsample_bynode=None,\n","                                              colsample_bytree=None,\n","                                              device=...\n","                                              importance_type=None,\n","                                              interaction_constraints=None,\n","                                              learning_rate=0.3, max_bin=None,\n","                                              max_cat_threshold=None,\n","                                              max_cat_to_onehot=None,\n","                                              max_delta_step=None, max_depth=5,\n","                                              max_leaves=None,\n","                                              min_child_weight=None,\n","                                              missing=nan,\n","                                              monotone_constraints=None,\n","                                              multi_strategy=None,\n","                                              n_estimators=25, n_jobs=None,\n","                                              num_parallel_tree=None,\n","                                              random_state=None, ...))],\n","                   final_estimator=SVC())"]},"execution_count":20,"metadata":{},"output_type":"execute_result"}],"source":["from sklearn.ensemble import StackingClassifier\n","from sklearn.svm import SVC\n","estimators = [\n","    ('rf', RandomForestClassifier(n_estimators=150,random_state=3,max_samples=0.5,max_features=0.75,max_depth=15)),\n","    ('gbdt',GradientBoostingClassifier(n_estimators=75,max_features=0.5)),\n","    ('xgb', XGBClassifier(n_estimators=25,learning_rate=0.3,max_depth=5))\n","]\n","model = StackingClassifier(estimators=estimators, final_estimator=SVC())\n","model.fit(X_train,y_train)"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"executionInfo":{"elapsed":25215,"status":"ok","timestamp":1734507539957,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"1lmvYye_KIyp","outputId":"8db7e2a4-fd28-4182-f054-202fe758491f"},"outputs":[{"data":{"text/html":["\u003cdiv\u003e\n","\u003cstyle scoped\u003e\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","\u003c/style\u003e\n","\u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n","    \u003ctr style=\"text-align: right;\"\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","      \u003cth\u003ecount\u003c/th\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003eSatisfaction\u003c/th\u003e\n","      \u003cth\u003e\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e0\u003c/th\u003e\n","      \u003ctd\u003e39983\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003cth\u003e1\u003c/th\u003e\n","      \u003ctd\u003e4930\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\n","\u003c/div\u003e\u003cbr\u003e\u003clabel\u003e\u003cb\u003edtype:\u003c/b\u003e int64\u003c/label\u003e"],"text/plain":["Satisfaction\n","0               39983\n","1                4930\n","Name: count, dtype: int64"]},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":["y_pred = model.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","\n","df_ans.to_csv(\"passenger1.csv\", index=True)\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":12,"status":"aborted","timestamp":1734506407244,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"3B8PUqgOR3m5"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":59065,"status":"aborted","timestamp":1734506407246,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"Ado0LuKnSYuR"},"outputs":[],"source":["df_ans.to_csv(\"passenger3.csv\", index=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":59062,"status":"aborted","timestamp":1734506407246,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"YzZmZ-WiKRof"},"outputs":[],"source":["from sklearn.ensemble import RandomForestClassifier\n","RFC = RandomForestClassifier(n_estimators=100,\n","                              random_state=3,\n","                              max_samples=0.2,\n","                              max_features=0.75,\n","                              max_depth=10,)\n","\n","\n","RFC.fit(X_train,y_train)\n","\n","y_pred = RFC.predict(X_test)\n","y_pred = RFC.predict(X_test)\n","df_ans = pd.DataFrame((y_pred))\n","df_ans.index = a\n","df_ans.columns = ['Satisfaction']\n","\n","df_ans.to_csv(\"passenger2.csv\", index=True)\n","df_ans.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":59063,"status":"aborted","timestamp":1734506407247,"user":{"displayName":"Мирон Кайгородцев","userId":"01513473299223894044"},"user_tz":-180},"id":"fvrPFQXeSXpB"},"outputs":[],"source":[]}],"metadata":{"colab":{"authorship_tag":"ABX9TyMJ+Ps92owTWDxDK9nNAN6r","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}